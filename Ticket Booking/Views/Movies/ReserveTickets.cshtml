@using Ticket_Booking.Models
@model Ticket_Booking.Models.ReserveMovieModel

@{
    ViewBag.Title = "ReserveTickets";
}
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<h2>Reserve Tickets for @ViewBag.movieName</h2>

@using (Html.BeginForm("ReserveTicketsSubmit", "Movies", new { MovieName = @ViewBag.movieName }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.locationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="locDropDownMenu">
                @Html.DropDownListFor(model => model.locationID, (IEnumerable<SelectListItem>)ViewBag.loc, "Select Location", new { @id = "locDropDown", @class = "form-control", @onchange = "funcLocDropDown()" })@*, onchange= "SelectedIndexChanged()", gdhh="fg" })*@
                @Html.HiddenFor(model => model.selectedLocationText)
                @Html.ValidationMessageFor(model => model.locationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.noOfTickets, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.noOfTickets, new { htmlAttributes = new { @class = "form-control", min=1, } })
                @Html.ValidationMessageFor(model => model.noOfTickets, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.movieDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.movieDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.movieDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.seatZone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2" id="drop">
                @Html.DropDownListFor(model => model.seatZone, (SelectList)ViewBag.zones, "Select Zone", new { @id = "zoneDropDown" })
                @Html.ValidationMessageFor(model => model.seatZone, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.ActionLink("Select Zone", "ShowZone", "Cinemas", new { controller = "Controller"}, new { id = "showZone", target = "_blank" })@*, onclick = "getSelectedScreenID();" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Reserve" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">


    //$('document').ready(function(){
    //    $('#locDropDown').change(function () {
    //        var selectedText = $('#locDropDown :selected').text();
    //        var value = $('#locDropDown :selected').val();
    //        if (value == "") {
    //            $('#showZone').hide();
    //        }
    //        else {
    //            $('#showZone').show();
    //            alert($('#showZone.href').text);
    //            //$('#showZone').prop('href', "../Cinemas/ShowZone?screenName=".concat(selectedText.toString(10)));
    //        }
    //    });

    //})
    function funcLocDropDown() {
        var element = document.getElementById("locDropDown");
        var selectedText = element.options[element.selectedIndex].text;
        document.getElementById("selectedLocationText").value = selectedText;
        if (selectedText != "Select Location") {
            document.getElementById("showZone").hidden = false;
            document.getElementById("showZone").href = "../Cinemas/ShowZone?screenName=".concat(selectedText.toString(10)).concat("&moviename=").concat('@(ViewBag.movieName)');
            var parameters = {};
            parameters.z_screenName = selectedText;
            $.ajax({
                url: 'http://localhost:47058/api/screen',
                data: parameters,
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                dataType: 'json',

                success: function (data) {                    
                    var i;
                    var zoneElement = document.getElementById("zoneDropDown");
                    for (i = 0; i < data.length; i++) {
                        var option = document.createElement("option");
                        option.text = data[i];
                        option.value = data[i];
                        zoneElement.appendChild(option);
                    }                    
                },
                failure: function (data) {
                    alert(data.responseText);
                },
                error: function (request, message, error) {
                    alert(error);
                }
            });
        } else {
                document.getElementById("showZone").hidden = true;                
        }
    }

    @*function SelectedIndexChanged() {
        var element = document.getElementById("locDropDown");
        var selectedText = element.options[element.selectedIndex].text;

        if (document.getElementById("locDropDown").value == "") {
            document.getElementById("showZone").hidden = true;
        }
        else {
            document.getElementById("showZone").hidden = false;
            document.getElementById("showZone").href = "../Cinemas/ShowZone?screenName=".concat(selectedText.toString(10)).concat("&moviename=").concat('@(ViewBag.movieName)');
        }
    }*@

    

</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
